syntax = "proto3";

package pb;

/*
    Essa opção indica a pasta onde devem ser gerados os código do protobuf que auxiliarao você com a serialização e desserialização
    dos dados.
*/
option go_package = "internal/pb";


/*
    Neste arquivo definiremos os dados que serão transacionados e as funcionalidades que estarão disponíveis
    "message" é a palavra chave para definir uma estrutura de dados, enquando "service" define os serviços
    disponíveis. 

    protoc --go_out=. --go-grpc_out=. proto/encomenda.proto
*/


/*
    A palavra chave message é usada para definir a estrutura de dados que será transmitida,
    Se você observar, a estrutura é composta por: "tipo nome = numero_order"
    O número é usado pelo protobuf internamente, e deve ser atribuido a partir do 1, seguindo algumas regras, entre elas:
        * O valor deve ser único
        * Não altere os valores enquanto estiver usando a message
        * Prefira usar valores entre 1 e 15, dessa forma irá economizar memória
    Você pode consultar todos os campos, assim como os rótulos dos campos na documentação: https://protobuf.dev/programming-guides/proto2
*/
message User{
    int32 cpf = 1;
    string name = 2;
}

message Encomenda{
    User user = 1;
    int32 cod_produto = 2;
}

message EncomendaRastreio{
    Encomenda encomenda = 1;
    int64 codRastreio = 2;
}

/*
    service é usado para definir as funcionalidades que serão permitidas através do RPC, aqui você deve colocar a 
    assinatura de todas as funções que espera que estejam visíveis para outras asplicações.

    O grpc permite 4 tipos de funções
    1° onde o cliente envia uma requisição e espera uma resposta
    2° Onde a  partir de uma requisição o servidor envia um conjunto de mensagens para o servidor (streaming) de respostas
    3° Onde o cliente envia um conjunto de mensagens (streaming) para o servidor e aguarda 1 resposta
    4° Tanto o cliente quando o servidor podem trabalhar com streaming de dados
*/
service EncomendaService{
    rpc SendEncomenda(Encomenda) returns (EncomendaRastreio){}
}